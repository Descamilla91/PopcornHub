//
//  TopRatedMoviesInteractor.swift
//  PopcornHub
//
//  Created by Diego Escamilla on 27/07/21.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

protocol TopRatedMoviesInteractorInterface {
    func fetchTopRatedMovies()
	func selectTopRatedMovie(request: TopRatedMoviesModels.SelectTopRatedMovie.Request)
}

protocol TopRatedMoviesDataStore {
	var selectedMovie: MediaResult { get set }
}

class TopRatedMoviesInteractor: TopRatedMoviesInteractorInterface, TopRatedMoviesDataStore {
   
    // MARK: - Properties
    
    var presenter: TopRatedMoviesPresenterInterface?
    var worker: TopRatedMoviesWorkerInterface = TopRatedMoviesWorker()
	var currentPage = 1
	var currentMediaList = [MediaResult]()
	var selectedMovie = MediaResult()
    
    // MARK: - TopRatedMoviesInteractorInterface
    
    func fetchTopRatedMovies() {
		let request = TopRatedMoviesModels.FetchTopRatedMovies.Request(page: currentPage)
		worker.fetchTopRatedMovies(request: request) { result in
			var response = TopRatedMoviesModels.FetchTopRatedMovies.Response()
			switch result {
				case .success(let topRatedResponse):
					let mediaList = topRatedResponse?.results ?? [MediaResult]()
					self.currentMediaList = mediaList
					response.mediaList = mediaList
				case .failure(let error):
					response.error = error
			}
			self.presenter?.presentTopRatedMovies(response: response)
		}
    }
	
	func selectTopRatedMovie(request: TopRatedMoviesModels.SelectTopRatedMovie.Request) {
		guard !currentMediaList.isEmpty else { return }
		selectedMovie = currentMediaList[request.index]
		presenter?.presentSelectedTopRatedMovie()
	}
}
