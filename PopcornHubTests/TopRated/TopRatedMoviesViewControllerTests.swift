//
//  TopRatedMoviesViewControllerTests.swift
//  PopcornHub
//
//  Created by Diego Escamilla on 02/08/21.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import PopcornHub
import XCTest

class TopRatedMoviesViewControllerTests: XCTestCase {
    
    // MARK: Subject under test
    
    var sut: TopRatedMoviesViewController!
    var window: UIWindow!
	var interactorSpy: TopRatedMoviesInteractorSpy!
	var routerSpy: TopRatedMoviesRouterSpy!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        window = UIWindow()
        setupTopRatedMoviesViewController()
    }
    
    override func tearDown() {
        window = nil
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupTopRatedMoviesViewController() {
		sut = TopRatedMoviesViewController(nibName: NibNames.TopRated, bundle: nil)
		interactorSpy = TopRatedMoviesInteractorSpy()
		routerSpy = TopRatedMoviesRouterSpy()
		sut.interactor = interactorSpy
		sut.router = routerSpy
    }
    
    func loadView() {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
    
    // MARK: Tests
	
    func testViewDidLoad() {
        // When
		loadView()
        
        // Then
		XCTAssert(interactorSpy?.fetchTopRatedMoviesCalled ?? false)
    }
    
    func testSelectMovie() {
		// Given
		loadView()
		let selectedIndex = 0
		let displayableMediaList = Dummies.Common.displayableTopRatedMovies
		sut.viewModel = TopRatedMoviesModels.FetchTopRatedMovies.ViewModel(displayableMediaList: displayableMediaList)
		sut.topRatedTableView.reloadData()
		
		// When
		sut.tableView(sut.topRatedTableView, didSelectRowAt: IndexPath(row: selectedIndex, section: 0))
		
		// Then
		XCTAssert(interactorSpy.selectTopRatedMovieCalled)
		XCTAssertEqual(interactorSpy.selectTopRatedMovieRequest?.index, selectedIndex)
    }
	
	func testDisplayTopRatedMovies() {
		// Given
		loadView()
		let displayableMediaList = Dummies.Common.displayableTopRatedMovies
		let viewModel = TopRatedMoviesModels.FetchTopRatedMovies.ViewModel(displayableMediaList: displayableMediaList)
		
		// When
		sut.displayTopRatedMovies(topRatedMoviesViewModel: viewModel)
		
		// Then
		XCTAssertEqual(sut.topRatedTableView.numberOfRows(inSection: 0), viewModel.displayableMediaList.count)
	}
	
	func testDisplaySelectedMovie() {
		// Given
		loadView()
		
		// When
		sut.displaySelectedMovie()
		
		// Then
		XCTAssert(routerSpy?.routeToMovieDetailCalled ?? false)
	}
}

// MARK: Test doubles

class TopRatedMoviesInteractorSpy: TopRatedMoviesInteractorInterface {
	var fetchTopRatedMoviesCalled = false
	func fetchTopRatedMovies() {
		fetchTopRatedMoviesCalled = true
	}
	
	var selectTopRatedMovieCalled = false
	var selectTopRatedMovieRequest: TopRatedMoviesModels.SelectTopRatedMovie.Request?
	func selectTopRatedMovie(request: TopRatedMoviesModels.SelectTopRatedMovie.Request) {
		selectTopRatedMovieCalled = true
		selectTopRatedMovieRequest = request
	}
}

class TopRatedMoviesRouterSpy: TopRatedMoviesRouterInterface, TopRatedMoviesDataPassing {
	var dataStore: TopRatedMoviesDataStore?
	
	var routeToMovieDetailCalled = false
	func routeToMovieDetail() {
		routeToMovieDetailCalled = true
	}
}
